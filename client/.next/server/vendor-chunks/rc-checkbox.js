"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/rc-checkbox";
exports.ids = ["vendor-chunks/rc-checkbox"];
exports.modules = {

/***/ "./node_modules/rc-checkbox/lib/index.js":
/*!***********************************************!*\
  !*** ./node_modules/rc-checkbox/lib/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nvar _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/typeof.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = exports.Checkbox = void 0;\nvar _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/extends.js\"));\nvar _objectSpread2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectSpread2 */ \"./node_modules/@babel/runtime/helpers/objectSpread2.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/slicedToArray.js\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ \"./node_modules/@babel/runtime/helpers/objectWithoutProperties.js\"));\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"classnames\"));\nvar _useMergedState3 = _interopRequireDefault(__webpack_require__(/*! rc-util/lib/hooks/useMergedState */ \"./node_modules/rc-util/lib/hooks/useMergedState.js\"));\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"react\"));\nvar _excluded = [\n    \"prefixCls\",\n    \"className\",\n    \"style\",\n    \"checked\",\n    \"disabled\",\n    \"defaultChecked\",\n    \"type\",\n    \"onChange\"\n];\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nvar Checkbox = /*#__PURE__*/ (0, React.forwardRef)(function(props, ref) {\n    var _classNames;\n    var _props$prefixCls = props.prefixCls, prefixCls = _props$prefixCls === void 0 ? \"rc-checkbox\" : _props$prefixCls, className = props.className, style = props.style, checked = props.checked, disabled = props.disabled, _props$defaultChecked = props.defaultChecked, defaultChecked = _props$defaultChecked === void 0 ? false : _props$defaultChecked, _props$type = props.type, type = _props$type === void 0 ? \"checkbox\" : _props$type, onChange = props.onChange, inputProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n    var inputRef = (0, React.useRef)(null);\n    var _useMergedState = (0, _useMergedState3.default)(defaultChecked, {\n        value: checked\n    }), _useMergedState2 = (0, _slicedToArray2.default)(_useMergedState, 2), rawValue = _useMergedState2[0], setRawValue = _useMergedState2[1];\n    (0, React.useImperativeHandle)(ref, function() {\n        return {\n            focus: function focus() {\n                var _inputRef$current;\n                (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n            },\n            blur: function blur() {\n                var _inputRef$current2;\n                (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.blur();\n            },\n            input: inputRef.current\n        };\n    });\n    var classString = (0, _classnames.default)(prefixCls, className, (_classNames = {}, (0, _defineProperty2.default)(_classNames, \"\".concat(prefixCls, \"-checked\"), rawValue), (0, _defineProperty2.default)(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n    var handleChange = function handleChange(e) {\n        if (disabled) {\n            return;\n        }\n        if (!(\"checked\" in props)) {\n            setRawValue(e.target.checked);\n        }\n        onChange === null || onChange === void 0 ? void 0 : onChange({\n            target: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {\n                type: type,\n                checked: e.target.checked\n            }),\n            stopPropagation: function stopPropagation() {\n                e.stopPropagation();\n            },\n            preventDefault: function preventDefault() {\n                e.preventDefault();\n            },\n            nativeEvent: e.nativeEvent\n        });\n    };\n    return /*#__PURE__*/ React.createElement(\"span\", {\n        className: classString,\n        style: style\n    }, /*#__PURE__*/ React.createElement(\"input\", (0, _extends2.default)({}, inputProps, {\n        className: \"\".concat(prefixCls, \"-input\"),\n        ref: inputRef,\n        onChange: handleChange,\n        disabled: disabled,\n        checked: !!rawValue,\n        type: type\n    })), /*#__PURE__*/ React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-inner\")\n    }));\n});\nexports.Checkbox = Checkbox;\nvar _default = Checkbox;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/rc-checkbox/lib/index.js\n");

/***/ })

};
;